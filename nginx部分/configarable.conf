## nginx作为静态资源web服务器
## 普通资源服务器
server {
    listen 7000;
    server_name 127.0.0.1;
    location ~* \.(gif|jpg|jpeg|png|css|js|ico)$ {
        root /usr/local/test-img;    
    }
}
server {
    listen       9090;
    server_name  localhost;
    # location / {
    #     root /usr/local/test-html/1;
    #     index testindex.html;  
    # }



    ## gzip压缩
    ## 压缩前
    # location ~* \.(gif|jpg|jpeg|png|css|js|ico)$ {
    #     root /usr/local/test-img;    
    # }
    ##压缩后
    # location ~* \.(gif|jpg|jpeg|png|css|js|ico)$ {
    #     #proxy_set_header X-Real-IP $remote_addr; 
    #     # proxy_set_header X-Forwarded-For $
    #     # proxy_add_x_forwarded_for;
    #     gzip  on;
    #     #gzip_static on;
    #     gzip_min_length 1024;
    #     #gzip_buffers 4 16k;
    #     gzip_comp_level 2;
    #     gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    #     gzip_vary on;
    #     root /usr/local/test-img;      
    # }


    ## nginx作为静态资源web服务器--防盗链的实现
    location ~* \.(gif|jpg|jpeg|png|css|js|ico)$ {
        valid_referers blocked server_names ~\.goole\. ~\.baidu\.;
        if ($invalid_referer) {
            #return 403;
            ##另一个没有设置防盗链的服务器
            rewrite ^/ http://127.0.0.1:7000/403.png;
        }
        root /usr/local/test-img;    
    }

     ## nginx---rewite规则
    # location ~* \.(gif|jpg|jpeg|png|css|js|ico)$ {
    #     valid_referers none blocked server_names ~\.goole\. ~\.baidu\.;
    #     if ($invalid_referer) {
    #         # return 403;
    #         rewrite ^/ http://127.0.0.1:9090/403.png;
    #         # return 403 http://127.0.0.1:9090/403.png;
    #     }
    #     ####  return [code(自定义code)] [url] (可以自定义code 跟 url)
    #     # return 303;
    #     # return http://127.0.0.1:9001/1.html;
    #     root /usr/local/test-img;    
    # }




    ## nginx作为静态资源web服务器--缓存的实现
    # location ~* \.(gif|jpg|jpeg|png|css|js|ico)$ {
    #     # proxy_redirect off;
    #     # proxy_set_header Host $host;
    #     # proxy_cache cache_one;
    #     # proxy_cache_valid 200 302 24h;
    #     # proxy_cache_valid 301 30d;
    #     # proxy_cache_valid any 5m;
    #     # expires 90d;
    #     # add_header wall  "flag";
    #     # expires 1d;
    #     add_header Cache_Control no-store;
    #     add_header Pragma no-cache;
    #     root /usr/local/test-img;    
    # }
}


###负载均衡
server {
    listen       9001;
    server_name  127.0.0.1;
    location / {
        root /usr/local/test-html/upstream;
        index 1.html;
    }
}
server {
    listen       9002;
    server_name  127.0.0.1;
    location / {
        root /usr/local/test-html/upstream;
        index 2.html;
    }
}
server {
    listen       9003;
    server_name  127.0.0.1;
    location / {
        root /usr/local/test-html/upstream;
        index 3.html;
    }
}
server {
    listen       9004;
    server_name  127.0.0.1;
    location / {
        root /usr/local/test-html/upstream;
        index 4.html;
    }
}

server {
    listen       9005;
    server_name  localhost;
    location / {
        proxy_pass http://clusters;
    }
}
###
server {
    listen       9006;
    server_name  127.0.0.1;
    location / {
        root /usr/local/test-html;
    }
}
###验证location的匹配关系
server {
    listen       9007;
    server_name  localhost;

    ## 验证location 匹配url路径加不加/的区别
    location /taobao/ {
        proxy_pass http://127.0.0.1:9006; ###匹配路径为/usrl/local/test-html/taobao/locationurltest.html
    }
    # location /taobao {
    #     proxy_pass http://127.0.0.1:9006; ###匹配路径为/usrl/local/test-html/taobao/locationurltest.html
    # }


    # 验证location proxy_pass 加不加/的区别
    # location /taobao/ {
    #     proxy_pass http://127.0.0.1:9006/; ###匹配路径为/usrl/local/test-html/locationurltest.html
    # }
    # location /taobao/ {
    #     proxy_pass http://127.0.0.1:9006/; 
    # }
}




##验证普通lcoation的最大匹配原则
server {
    listen       9008;
    server_name  localhost;
    location /taobao/ {
        root /usr/local/test-html;
        allow all;
    }
    location /taobao/taobao.html {
        root /usr/local/test-html;
        deny all;
    }



    ## 验证正则location
    # location ~ /taobao.html {
    #     root /usr/local/test-html;
    #     deny all;
    # }
    # location ~ \.html$ {
    #     root /usr/local/test-html;
    #     allow all;
    # }




    ## 验证优先级高的普通location跟正则lcoation匹配原则
    # location /taobao/taobao.html {
    #     root /usr/local/test-html;
    #     deny all;
    # }
    # location ~ \.html$ {
    #     root /usr/local/test-html;
    #     allow all;
    # }



    ####精确location跟正则location的配置
    # location = /taobao/taobao.html {
    #     root /usr/local/test-html;
    #     deny all;
    # }
    # location ~ \.html$ {
    #     root /usr/local/test-html;
    #     allow all;
    # }


    ## 特殊情况`^~ ` location跟正则location还有普通location的配置
    
    # location  ^~ /taobao/ {
    #     root /usr/local/test-html;
    #     deny all;
    # }
    # location /taobao/taobao.html {
    #     root /usr/local/test-html;
    #     deny all;
    # }
    # location ~ \.html$ {
    #     root /usr/local/test-html;
    #     allow all;
    # }
}


##验证rewrite规则
server {
    listen 9009;
    server_name localhost;
    ##验证last跟break的区别
    # location / {
    #     rewrite ^/code/ /test;
    #     return 403;
    # }
    # location /test {
    #     return 500;
    # }

    ##验证参数问题
    # location / {
    #     rewrite /code /testparams? permanent;
    # }

    ##验证if指令
    # if ($http_user_agent ~ 10_14_3) {
    #     return 401;
    # }
    # if ($status != 200) {
    #     return 401;
    # }

}
